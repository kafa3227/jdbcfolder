#summary First steps to use the jdbcFolder library
= Introduction =

  In this page you will find the procedure to follow to use jdbcFolder with two tools :
   * SQuirreL SQL
   * Oracle Data Integrator


= Configuration =

  # Download the rhino1_5R5.zip file from the following website :

  [http://www.mozilla.org/rhino Rhino project]

  # Go to _Downloads-> Rhino downloads archive_ section
  # Extract js.jar and add it in the classpath of the java application
  # Add jdbcFolder0.1.jar at the java application classpath 


The driver class is :

_com.ysance.tools.jdbc.driver.JdbcFolderDriver


By now the driver url is fixed at :

_jdbc:folder_


No login information to enter ( by now )

= SQuirreL SQL =

  # Add the two jar files in the lib directory of SQuirreL an then launch the application.
  # Configure a new driver named JdbcFolder and fill-up the field with the url and driver class given before
  # Create an alias selecting the JdbcFolder driver. The url is still the same than above.
  # Connect and try a {{{select * from /windows }}} query

= Oracle Data Integrator =

  # Copier les deux x fichiers dans le répertoire drivers de l'installation.
  # Lancer une fois jython.bat ( ça met en cache les jars ) et sortir (Ctrl+Z).

== Configure the technology ==

  # Aller dans la Topologie -> Architecture logique , et insérer une nouvelle technologie.
    * Nom : JdbcFolder
    * Code : JDBCFOLDER
    * Type : Base de données ou fichier (JDBC/ODBC)

  # Sélectionner « Utilisation d'un catalogue » terme : Catalogue
  # Insérer un nouveau schéma logique( ex : JFLDR_TEST )
  # Aller dans la Topologie -> Architecture physique et insérer un nouveau serveur de données( ex : JDBCFOLDER_TEST )

  # Sous ce serveur, insérer un nouveau schéma physique. Il peut rester vide.
  # Associer le schéma logique et le schéma physique

== Créer un nouveau traitement ==

  * Y ajouter une nouvelle ligne de type Sunopsis API dont le contenu est :

    {{{
OdiOutFile -FILE=C:/temp/liste.txt -APPEND -XROW_SEP=0D0A


ceci est un fichier appelé #filename
    }}}

  * Configurer l'onglet source avec la technologie JdbcFolder, schéma logique JFLDR_TEST.

  * Ajouter la requête suivante :

{{{
select filename from /temp
}}}

  * Enregistrer le tout et exécuter. Dans le répertoire C:\temp se trouve désormais un fichier liste.txt contenant la liste des fichiers présents dans ce même répertoire ( sauf liste.txt puisqu'il a été créé après la sélection ). OdiOutFilepeut être remplacé par n'importe quel outil ODI, par une ligne jython ou du SQL, comme dans un traitement lambda.


Seul bémol, pour l'instant, il n'est pas possible d'utiliser les méthodes de substitution.